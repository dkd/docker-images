# <%= "#{dockerhub_organisation}/#{container_name}:#{tag}" %>
FROM <%= base_system %>

LABEL maintainer.first="Nicolai Reuschling 'nicolai.reuschling@dkd.de'"

# Setup environment
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV RUBY_VERSION=<%= env['ruby_version'] %>
ENV PHP_VERSION=<%= env['php_version'] %>
ENV NODE_VERSION=<%= env['node_version'] %>
ENV BUNDLE_PATH=<%= env['bundle_path'] %>
ENV COMPOSER_CACHE_DIR=<%= env['composer_cache_dir'] %>
ENV NPM_CONFIG_CACHE=<%= env['npm_config_cache'] %>

# Setup locale
RUN DEBIAN_FRONTEND="noninteractive" apt-get -q update &&\
    DEBIAN_FRONTEND="noninteractive" apt-get -q upgrade -y -o Dpkg::Options::="--force-confnew" --no-install-recommends &&\
    DEBIAN_FRONTEND="noninteractive" apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends locales &&\
    locale-gen en_US.UTF-8 de_DE.UTF-8 && localedef -i en_US -f UTF-8 en_US.UTF-8

# for testing purposes: DEBIAN_FRONTEND="noninteractive" apt-get -q upgrade -y -o Dpkg::Options::="--force-confnew" --no-install-recommends &&\
RUN DEBIAN_FRONTEND="noninteractive" apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends \
      openssh-client \
      wget \
      curl \
      unzip \
      locales \
      libxslt-dev \
      libxml2-dev \
      build-essential \
      sqlite3 \
      libsqlite3-dev \
      libcurl4-openssl-dev \
      imagemagick \
      libmagickwand-dev \
      net-tools \
      libssl-dev \
      libgtk2.0-0 \
      libgtk-3-0 \
      libnotify-dev \
      libgconf-2-4 \
      libnss3 \
      libxss1 \
      libasound2 \
      libxtst6 \
      xauth \
      xvfb \
      <%= if defined?(additional_apt_packages) then additional_apt_packages.join(' ') else '' end %>

# Install Git
RUN DEBIAN_FRONTEND="noninteractive" apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends \
      apt-transport-https \
      ca-certificates \
      software-properties-common &&\
    add-apt-repository ppa:git-core/ppa &&\
    apt-get update -q &&\
    DEBIAN_FRONTEND="noninteractive" apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends git

<% if defined?(php_ppa) %>
RUN DEBIAN_FRONTEND="noninteractive" add-apt-repository <%= php_ppa %> &&\
    DEBIAN_FRONTEND="noninteractive" apt-get update -q
<% end %>

<% if defined?(php) && defined?(composer_version) %>
# Install PHP (<%= php %>)
RUN DEBIAN_FRONTEND="noninteractive" apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends <%= php %> \
  <% if defined?(php_extensions) %>
    <%= php_extensions.join(' ') %>
  <% end %>
RUN curl -SLO https://getcomposer.org/download/<%= composer_version %>/composer.phar &&\
    mv composer.phar /usr/local/bin/composer &&\
    chmod +x /usr/local/bin/composer
<% end %>

<% if defined?(ruby_ppa) && defined?(ruby_version) %>
# Install Ruby (v<%= ruby_version %>)
RUN add-apt-repository <%= ruby_ppa %> &&\
    apt-get update -q &&\
    DEBIAN_FRONTEND="noninteractive" apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends \
      ruby<%= ruby_version %> \
      ruby<%= ruby_version %>-dev

<% if defined?(rake_version) && defined?(rubygems_version) && defined?(bundler_version) %>
# Install Rake, update RubyGems and install Bundler
RUN rm -f /usr/lib/ruby/vendor_ruby/rubygems/defaults/operating_system.rb
RUN gem update --system <%= rubygems_version %> --no-doc --no-post-install-message &&\
    gem install bundler --version=<%= bundler_version %> --no-doc --no-post-install-message &&\
    <% legacy_bundler_versions.each do |legacy_bundler_version| %>
    gem install bundler --version=<%= legacy_bundler_version %> --no-doc --no-post-install-message &&\
    <% end %>
    gem list
<% end %>
<% end %>

<% if defined?(nodejs_version) %>
# Install NodeJS (v<%= nodejs_version %>)
RUN curl -SLO "https://nodejs.org/dist/v<%= nodejs_version %>/node-v<%= nodejs_version %>-linux-x64.tar.xz" &&\
    tar -xJf "node-v<%= nodejs_version %>-linux-x64.tar.xz" -C /usr/local --strip-components=1 &&\
    ln -s /usr/local/bin/node /usr/local/bin/nodejs &&\
    rm /node-v<%= nodejs_version %>-linux-x64.tar.xz

<% if defined?(npm_version) %>
# Install npm (v<%= npm_version %>)
RUN npm install -g npm@<%= npm_version %>
<% end %>
<% end %>

# Cleanup
RUN DEBIAN_FRONTEND="noninteractive" apt-get -q autoremove &&\
    DEBIAN_FRONTEND="noninteractive" apt-get -q clean -y &&\
    rm -rf /var/lib/apt/lists/* &&\
    rm -f /var/cache/apt/*.bin
